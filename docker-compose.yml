version: "3.8"

services:
  # Copilot Bridge (hybrid routing)
  bridge:
    build: .
    container_name: copilot-bridge
    ports:
      - "11436:11436"  # Bridge API endpoint
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - OLLAMA_BASE=http://192.168.1.138:11434
    command: python3 proxy_instrumented.py
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.ImageName}}|{{.Name}}|{{.ID}}"
    restart: unless-stopped
    depends_on:
      - exporter

  # Prometheus metrics exporter
  exporter:
    build: .
    container_name: bridge-exporter
    ports:
      - "8000:8000"  # Prometheus metrics
      - "8080:8080"  # Log ingestion
    command: python3 exporter.py
    restart: unless-stopped

  # Prometheus (metrics storage)
  prometheus:
    image: prom/prometheus:latest
    container_name: bridge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
    restart: unless-stopped

  # Grafana (visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: bridge-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped

  # Loki (log aggregation, optional)
  loki:
    image: grafana/loki:latest
    container_name: bridge-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # Promtail (log shipper for Loki, optional)
  promtail:
    image: grafana/promtail:latest
    container_name: bridge-promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
